services:
  mongo:
    image: mongo:latest
    container_name: nutriwizard-mongo
    restart: always
    ports:
      - '27017:27017' # Mapea el puerto 27017 para MongoDB
    volumes:
      - mongo_data:/data/db # Persistencia de datos de MongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: test # Usuario raíz para MongoDB
      MONGO_INITDB_ROOT_PASSWORD: test # Contraseña raíz para MongoDB
      MONGO_INITDB_DATABASE: NutriWizard # Base de datos inicial
    command: mongod --bind_ip_all --auth # Habilita autenticación

  redis:
    image: redis:latest
    container_name: nutriwizard-redis
    restart: always
    ports:
      - '6379:6379' # Mapea el puerto 6379 para Redis
    volumes:
      - redis_data:/data # Persistencia de datos de Redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "verbose"] # Configuración básica

  backend:
    build: ./backend
    container_name: nutriwizard-backend
    restart: always
    ports:
      - '5001:5001' # Mapea el puerto 5001 para el backend
    environment:
      DB_NAME: NutriWizard
      DB_USER: test
      DB_PASSWORD: test
      DB_HOST: mongo # Conecta al servicio MongoDB
      DB_PORT: 27017
      DB_DIALECT: mongodb
      JWT_SECRET: diQ5Wsu7HMk/JKSl7jcu/w0GJ79OXmIsyoZS4zWqatQ=
      PORT: 5001
      REDIS_HOST: redis # Conecta al servicio Redis
      REDIS_PORT: 6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    command: npm run dev
    depends_on:
      - mongo # Asegura que MongoDB se inicie antes del backend
      - redis # Asegura que Redis se inicie antes del backend

  frontend:
    build: ./frontend
    container_name: nutriwizard-frontend
    restart: always
    ports:
      - '3000:3000' # Mapea el puerto 3000 para el frontend
    environment:
      CHOKIDAR_USEPOLLING: true
      HOST: 0.0.0.0
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://backend:5001 # URL del backend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: npm start
    stdin_open: true
    tty: true
    depends_on:
      - backend # Asegura que backend se inicie antes del frontend

volumes:
  mongo_data: # Persistencia de MongoDB
  redis_data: # Persistencia de Redis